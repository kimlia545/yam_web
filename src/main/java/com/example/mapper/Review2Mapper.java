
package com.example.mapper;

import java.util.HashMap;
import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

import com.example.vo.ReviewVO;

public interface Review2Mapper {
	
	@Select("SELECT * FROM REVIEW ORDER BY RVDATE DESC")
	public List<ReviewVO> selectReviewList();
	
	@Delete("<script>"
			+ "DELETE REVIEW WHERE RVNO IN("
			+ "<foreach collection=\"rvnos\" item=\"tmp\" separator=\",\">"
			+ "#{tmp}"
			+ "</foreach>"
			+ ")"
			+ "</script>")
	public int deleteReviewBatch(@Param("rvnos") String[] rvnos);
//	SELECT * 
//	FROM 
//	    (SELECT 
//	        RSJ.RVNO, RSJ.CONTENT, RSJ.SHOP_NAME, RSJ.SCORE, RSJ.USERID, RSJ.RVDATE, ROW_NUMBER() OVER (ORDER BY RSJ.RVNO DESC) ROWN 
//	    FROM 
//	        (SELECT 
//	            REVIEW.RVNO, REVIEW.CONTENT, REVIEW.SHOPNO, REVIEW.SCORE, REVIEW.USERID, REVIEW.RVDATE, SHOP.SHOP_NO, SHOP.SHOP_NAME 
//	        FROM 
//	            REVIEW, SHOP 
//	        WHERE 
//	            REVIEW.SHOPNO = SHOP.SHOP_NO) RSJ 
//	    WHERE 
//	        RSJ.CONTENT LIKE '%' || #{text} || '%') RSJ2 
//	WHERE 
//	    RSJ2.ROWN BETWEEN #{start} AND #{end}
	@Select("SELECT * FROM "
			+ "(SELECT RSJ.RVNO, RSJ.CONTENT, RSJ.SHOP_NAME, RSJ.SCORE, RSJ.USERID, RSJ.RVDATE, ROW_NUMBER() OVER (ORDER BY RSJ.RVNO DESC) ROWN "
			+ "FROM (SELECT REVIEW.RVNO, REVIEW.CONTENT, REVIEW.SHOPNO, REVIEW.SCORE, REVIEW.USERID, REVIEW.RVDATE, SHOP.SHOP_NO, SHOP.SHOP_NAME "
			+ "FROM REVIEW, SHOP WHERE REVIEW.SHOPNO = SHOP.SHOP_NO) RSJ "
			+ "WHERE (RSJ.CONTENT LIKE '%' || #{text} || '%') OR (RSJ.SHOP_NAME LIKE '%' || #{text} || '%')) RSJ2 "
			+ "WHERE RSJ2.ROWN BETWEEN #{start} AND #{end}")
	public List<ReviewVO> listReview(HashMap<String, Object> map);

	@Select("SELECT COUNT(*) FROM REVIEW WHERE CONTENT LIKE '%' || #{text} || '%'")
	public int countReview(String text);
	
//SELECT
//    CN3.SHOP_NAME, CN3.CNT
//FROM
//    (SELECT 
//        CN2.SHOP_NAME, CNT, ROW_NUMBER() OVER (ORDER BY CN2.CNT DESC) ROWN 
//    FROM
//        (SELECT
//            CN.SHOP_NAME, CN.SHOPNO, COUNT(*) AS CNT
//        FROM
//            (SELECT 
//                REVIEW.SHOPNO, SHOP.SHOP_NO, SHOP.SHOP_NAME
//            FROM 
//                REVIEW, SHOP
//            WHERE
//                REVIEW.SHOPNO = SHOP.SHOP_NO) CN
//        GROUP BY
//            CN.SHOP_NAME, CN.SHOPNO ORDER BY CNT DESC) CN2) CN3
//WHERE
//    CN3.ROWN BETWEEN 1 AND 5
	@Select("SELECT CN3.SHOP_NAME, CN3.CNT "
			+ "FROM (SELECT CN2.SHOP_NAME, CNT, ROW_NUMBER() OVER (ORDER BY CN2.CNT DESC) ROWN "
			+ "FROM (SELECT CN.SHOP_NAME, CN.SHOPNO, COUNT(*) AS CNT "
			+ "FROM (SELECT REVIEW.SHOPNO, SHOP.SHOP_NO, SHOP.SHOP_NAME "
			+ "FROM REVIEW, SHOP WHERE REVIEW.SHOPNO = SHOP.SHOP_NO) CN "
			+ "GROUP BY CN.SHOP_NAME, CN.SHOPNO ORDER BY CNT DESC) CN2) CN3 "
			+ "WHERE CN3.ROWN BETWEEN 1 AND 5")
	public List<ReviewVO> countVisit(HashMap<String, Object> map);
	
	@Select("SELECT * "
			+ "FROM (SELECT CN3.SHOP_NAME, CN3.CNT, ROW_NUMBER() OVER (ORDER BY CN3.CNT DESC) ROWN "
			+ "FROM (SELECT CN2.SHOP_NAME, COUNT(*) AS CNT "
			+ "FROM (SELECT * FROM (SELECT REVIEW.SHOPNO, REVIEW.RVDATE, SHOP.SHOP_NO, SHOP.SHOP_NAME "
			+ "FROM REVIEW, SHOP WHERE REVIEW.SHOPNO = SHOP.SHOP_NO) CN "
			+ "WHERE CN.RVDATE >= TO_CHAR(SYSDATE-7,'YYYYMMDD')) CN2 "
			+ "GROUP BY CN2.SHOP_NAME, CN2.SHOPNO ORDER BY CNT DESC) CN3) CN4 "
			+ "WHERE ROWN BETWEEN 1 AND 5")
	public List<ReviewVO> countVisitWeek(HashMap<String, Object> map);
	
//	SELECT CN4.SHOP_NAME, CN4.CNTF
//	FROM
//	    (SELECT CN3.SHOP_NAME, CN3.CNTF, ROW_NUMBER() OVER (ORDER BY CN3.CNTF DESC) ROWN 
//	    FROM
//	        (SELECT
//	            CN2.SHOP_NAME, SUM(DECODE(CN2.GENDER, 'F', 1, 0)) AS CNTF
//	        FROM
//	            (SELECT
//	                CN.USERID, CN.SHOPNO, CN.SHOP_NAME, MEMBER.USERID, MEMBER.GENDER
//	            FROM
//	                (SELECT
//	                    REVIEW.USERID, REVIEW.SHOPNO, SHOP.SHOP_NAME, SHOP.SHOP_NO
//	                FROM
//	                    REVIEW, SHOP
//	                WHERE
//	                    REVIEW.SHOPNO = SHOP.SHOP_NO) CN, MEMBER
//	            WHERE
//	                CN.USERID = MEMBER.USERID) CN2
//	        GROUP BY
//	            CN2.SHOP_NAME
//	        ORDER BY
//	            CNTF DESC) CN3) CN4
//	WHERE
//	    CN4.ROWN BETWEEN 1 AND 5
	@Select("SELECT CN4.SHOP_NAME, CN4.CNTF "
			+ "FROM (SELECT CN3.SHOP_NAME, CN3.CNTF, ROW_NUMBER() OVER (ORDER BY CN3.CNTF DESC) ROWN "
			+ "FROM (SELECT CN2.SHOP_NAME, SUM(DECODE(CN2.GENDER, 'f', 1, 0)) AS CNTF "
			+ "FROM (SELECT CN.USERID, CN.SHOPNO, CN.SHOP_NAME, MEMBER.USERID, MEMBER.GENDER "
			+ "FROM (SELECT REVIEW.USERID, REVIEW.SHOPNO, SHOP.SHOP_NAME, SHOP.SHOP_NO "
			+ "FROM REVIEW, SHOP WHERE REVIEW.SHOPNO = SHOP.SHOP_NO) CN, MEMBER "
			+ "WHERE CN.USERID = MEMBER.USERID) CN2 "
			+ "GROUP BY CN2.SHOP_NAME ORDER BY CNTF DESC) CN3) CN4 "
			+ "WHERE CN4.ROWN BETWEEN 1 AND 5")
	public List<ReviewVO> countFemaleVisit(HashMap<String, Object> map);
	
	@Select("SELECT * "
			+ "FROM (SELECT CN4.SHOP_NAME, CN4.CNTF, ROW_NUMBER() OVER (ORDER BY CN4.CNTF DESC) ROWN "
			+ "FROM (SELECT CN3.SHOP_NAME, CN3.SHOPNO, SUM(DECODE(CN3.GENDER, 'f', 1, 0)) AS CNTF "
			+ "FROM (SELECT CN2.RVDATE, CN2.SHOPNO, CN2.SHOP_NAME, CN2.GENDER "
			+ "FROM (SELECT CN.USERID, CN.RVDATE, CN.SHOPNO, CN.SHOP_NAME, MEMBER.USERID, MEMBER.GENDER "
			+ "FROM (SELECT REVIEW.USERID, REVIEW.SHOPNO, REVIEW.RVDATE, SHOP.SHOP_NAME, SHOP.SHOP_NO "
			+ "FROM REVIEW, SHOP WHERE REVIEW.SHOPNO = SHOP.SHOP_NO) CN, MEMBER WHERE CN.USERID = MEMBER.USERID) CN2 "
			+ "WHERE CN2.RVDATE >= TO_CHAR(SYSDATE-7,'YYYYMMDD')) CN3 "
			+ "GROUP BY CN3.SHOP_NAME, CN3.SHOPNO) CN4) CN5 "
			+ "WHERE CN5.ROWN BETWEEN 1 AND 5")
	public List<ReviewVO> countFemaleVisitWeek(HashMap<String, Object> map);
	
	@Select("SELECT CN4.SHOP_NAME, CN4.CNTM "
			+ "FROM (SELECT CN3.SHOP_NAME, CN3.CNTM, ROW_NUMBER() OVER (ORDER BY CN3.CNTM DESC) ROWN "
			+ "FROM (SELECT CN2.SHOP_NAME, SUM(DECODE(CN2.GENDER, 'm', 1, 0)) AS CNTM "
			+ "FROM (SELECT CN.USERID, CN.SHOPNO, CN.SHOP_NAME, MEMBER.USERID, MEMBER.GENDER "
			+ "FROM (SELECT REVIEW.USERID, REVIEW.SHOPNO, SHOP.SHOP_NAME, SHOP.SHOP_NO "
			+ "FROM REVIEW, SHOP WHERE REVIEW.SHOPNO = SHOP.SHOP_NO) CN, MEMBER "
			+ "WHERE CN.USERID = MEMBER.USERID) CN2 "
			+ "GROUP BY CN2.SHOP_NAME ORDER BY CNTM DESC) CN3) CN4 "
			+ "WHERE CN4.ROWN BETWEEN 1 AND 5")
	public List<ReviewVO> countMaleVisit(HashMap<String, Object> map);
	
	@Select("SELECT * "
			+ "FROM (SELECT CN4.SHOP_NAME, CN4.CNTM, ROW_NUMBER() OVER (ORDER BY CN4.CNTM DESC) ROWN "
			+ "FROM (SELECT CN3.SHOP_NAME, CN3.SHOPNO, SUM(DECODE(CN3.GENDER, 'm', 1, 0)) AS CNTM "
			+ "FROM (SELECT CN2.RVDATE, CN2.SHOPNO, CN2.SHOP_NAME, CN2.GENDER "
			+ "FROM (SELECT CN.USERID, CN.RVDATE, CN.SHOPNO, CN.SHOP_NAME, MEMBER.USERID, MEMBER.GENDER "
			+ "FROM (SELECT REVIEW.USERID, REVIEW.SHOPNO, REVIEW.RVDATE, SHOP.SHOP_NAME, SHOP.SHOP_NO "
			+ "FROM REVIEW, SHOP WHERE REVIEW.SHOPNO = SHOP.SHOP_NO) CN, MEMBER "
			+ "WHERE CN.USERID = MEMBER.USERID) CN2 "
			+ "WHERE CN2.RVDATE >= TO_CHAR(SYSDATE-7,'YYYYMMDD')) CN3 "
			+ "GROUP BY CN3.SHOP_NAME, CN3.SHOPNO) CN4) CN5 "
			+ "WHERE CN5.ROWN BETWEEN 1 AND 5")
	public List<ReviewVO> countMaleVisitWeek(HashMap<String, Object> map);
	
//SELECT
//  CN3.SHOP_NAME, CN3.AVG
//FROM
//  (SELECT 
//      CN2.SHOP_NAME, AVG, ROW_NUMBER() OVER (ORDER BY CN2.AVG DESC) ROWN 
//  FROM
//      (SELECT
//          CN.SHOP_NAME, CN.SHOPNO, AVG(CN.SCORE) AS AVG
//      FROM
//          (SELECT 
//              REVIEW.SHOPNO, REVIEW.SCORE, SHOP.SHOP_NO, SHOP.SHOP_NAME
//          FROM 
//              REVIEW, SHOP
//          WHERE
//              REVIEW.SHOPNO = SHOP.SHOP_NO) CN
//      GROUP BY
//          CN.SHOP_NAME, CN.SHOPNO ORDER BY AVG DESC) CN2) CN3
//WHERE
//  CN3.ROWN BETWEEN 1 AND 5
	@Select("SELECT CN3.SHOP_NAME, CN3.AVG "
			+ "FROM (SELECT CN2.SHOP_NAME, AVG, ROW_NUMBER() OVER (ORDER BY CN2.AVG DESC) ROWN "
			+ "FROM (SELECT CN.SHOP_NAME, CN.SHOPNO, AVG(CN.SCORE) AS AVG "
			+ "FROM (SELECT REVIEW.SHOPNO, REVIEW.SCORE, SHOP.SHOP_NO, SHOP.SHOP_NAME "
			+ "FROM REVIEW, SHOP WHERE REVIEW.SHOPNO = SHOP.SHOP_NO) CN "
			+ "GROUP BY CN.SHOP_NAME, CN.SHOPNO ORDER BY AVG DESC) CN2) CN3 "
			+ "WHERE CN3.ROWN BETWEEN 1 AND 5")
	public List<ReviewVO> avgScore(HashMap<String, Object> map);
	
	@Select("SELECT * "
			+ "FROM (SELECT CN3.SHOP_NAME, AVG, ROW_NUMBER() OVER (ORDER BY CN3.AVG DESC) ROWN "
			+ "FROM (SELECT CN2.SHOPNO, CN2.SHOP_NAME, AVG(CN2.SCORE) AS AVG "
			+ "FROM (SELECT CN.SHOPNO, CN.SCORE, CN.SHOP_NAME "
			+ "FROM (SELECT REVIEW.SHOPNO, REVIEW.SCORE, REVIEW.RVDATE, SHOP.SHOP_NO, SHOP.SHOP_NAME "
			+ "FROM REVIEW, SHOP WHERE REVIEW.SHOPNO = SHOP.SHOP_NO) CN "
			+ "WHERE CN.RVDATE >= TO_CHAR(SYSDATE-7,'YYYYMMDD'))CN2 "
			+ "GROUP BY CN2.SHOP_NAME, CN2.SHOPNO "
			+ "ORDER BY AVG DESC)CN3)CN4 "
			+ "WHERE CN4.ROWN BETWEEN 1 AND 5")
	public List<ReviewVO> avgScoreWeek(HashMap<String, Object> map);
	
//	SELECT CN4.SHOP_NAME, CN4.AVGF, CN4.ROWN
//	FROM
//	    (SELECT CN3.SHOP_NAME, CN3.AVGF, ROW_NUMBER() OVER (ORDER BY CN3.AVGF DESC NULLS LAST) ROWN 
//	    FROM
//	        (SELECT
//	            CN2.SHOP_NAME, AVG(DECODE(CN2.GENDER, 'f', CN2.SCORE)) AS AVGF
//	        FROM
//	            (SELECT
//	                CN.USERID, CN.SCORE, CN.SHOPNO, CN.SHOP_NAME, MEMBER.USERID, MEMBER.GENDER
//	            FROM
//	                (SELECT
//	                    REVIEW.USERID, REVIEW.SHOPNO, REVIEW.SCORE, SHOP.SHOP_NAME, SHOP.SHOP_NO
//	                FROM
//	                    REVIEW, SHOP
//	                WHERE
//	                    REVIEW.SHOPNO = SHOP.SHOP_NO) CN, MEMBER
//	            WHERE
//	                CN.USERID = MEMBER.USERID) CN2
//	        GROUP BY
//	            CN2.SHOP_NAME
//	        ORDER BY
//	            AVGF DESC) CN3) CN4
//	WHERE
//	    CN4.ROWN BETWEEN 1 AND 5
	@Select("SELECT CN4.SHOP_NAME, CN4.AVGF, CN4.ROWN "
			+ "FROM (SELECT CN3.SHOP_NAME, CN3.AVGF, ROW_NUMBER() OVER (ORDER BY CN3.AVGF DESC NULLS LAST) ROWN "
			+ "FROM (SELECT CN2.SHOP_NAME, AVG(DECODE(CN2.GENDER, 'f', CN2.SCORE)) AS AVGF "
			+ "FROM (SELECT CN.USERID, CN.SCORE, CN.SHOPNO, CN.SHOP_NAME, MEMBER.USERID, MEMBER.GENDER "
			+ "FROM (SELECT REVIEW.USERID, REVIEW.SHOPNO, REVIEW.SCORE, SHOP.SHOP_NAME, SHOP.SHOP_NO "
			+ "FROM REVIEW, SHOP WHERE REVIEW.SHOPNO = SHOP.SHOP_NO) CN, MEMBER "
			+ "WHERE CN.USERID = MEMBER.USERID) CN2 GROUP BY CN2.SHOP_NAME ORDER BY AVGF DESC) CN3) CN4 "
			+ "WHERE CN4.ROWN BETWEEN 1 AND 5")
	public List<ReviewVO> avgFemaleScore(HashMap<String, Object> map);
	
	@Select("SELECT CN5.SHOP_NAME, CN5.AVGF "
			+ "FROM (SELECT CN4.SHOP_NAME, CN4.AVGF, ROW_NUMBER() OVER (ORDER BY CN4.AVGF DESC NULLS LAST) ROWN "
			+ "FROM (SELECT CN3.SHOP_NAME, AVG(DECODE(CN3.GENDER, 'f', CN3.SCORE)) AS AVGF "
			+ "FROM (SELECT CN2.SHOP_NAME, CN2.GENDER, CN2.SCORE "
			+ "FROM (SELECT CN.USERID, CN.SCORE, CN.RVDATE, CN.SHOPNO, CN.SHOP_NAME, MEMBER.USERID, MEMBER.GENDER "
			+ "FROM (SELECT REVIEW.USERID, REVIEW.SHOPNO, REVIEW.SCORE, REVIEW.RVDATE, SHOP.SHOP_NAME, SHOP.SHOP_NO "
			+ "FROM REVIEW, SHOP WHERE REVIEW.SHOPNO = SHOP.SHOP_NO) CN, MEMBER "
			+ "WHERE CN.USERID = MEMBER.USERID) CN2 "
			+ "WHERE CN2.RVDATE >= TO_CHAR(SYSDATE-7,'YYYYMMDD')) CN3 "
			+ "GROUP BY CN3.SHOP_NAME) CN4)CN5 "
			+ "WHERE CN5.ROWN BETWEEN 1 AND 5")
	public List<ReviewVO> avgFemaleScoreWeek(HashMap<String, Object> map);
	
	@Select("SELECT CN4.SHOP_NAME, CN4.AVGM, CN4.ROWN "
			+ "FROM (SELECT CN3.SHOP_NAME, CN3.AVGM, ROW_NUMBER() OVER (ORDER BY CN3.AVGM DESC NULLS LAST) ROWN "
			+ "FROM (SELECT CN2.SHOP_NAME, AVG(DECODE(CN2.GENDER, 'm', CN2.SCORE)) AS AVGM "
			+ "FROM (SELECT CN.USERID, CN.SCORE, CN.SHOPNO, CN.SHOP_NAME, MEMBER.USERID, MEMBER.GENDER "
			+ "FROM (SELECT REVIEW.USERID, REVIEW.SHOPNO, REVIEW.SCORE, SHOP.SHOP_NAME, SHOP.SHOP_NO "
			+ "FROM REVIEW, SHOP WHERE REVIEW.SHOPNO = SHOP.SHOP_NO) CN, MEMBER "
			+ "WHERE CN.USERID = MEMBER.USERID) CN2 GROUP BY CN2.SHOP_NAME ORDER BY AVGM DESC) CN3) CN4 "
			+ "WHERE CN4.ROWN BETWEEN 1 AND 5")
	public List<ReviewVO> avgMaleScore(HashMap<String, Object> map);
	
	@Select("SELECT CN5.SHOP_NAME, CN5.AVGM "
			+ "FROM (SELECT CN4.SHOP_NAME, CN4.AVGM, ROW_NUMBER() OVER (ORDER BY CN4.AVGM DESC NULLS LAST) ROWN "
			+ "FROM (SELECT CN3.SHOP_NAME, AVG(DECODE(CN3.GENDER, 'm', CN3.SCORE)) AS AVGM "
			+ "FROM (SELECT CN2.SHOP_NAME, CN2.GENDER, CN2.SCORE "
			+ "FROM (SELECT CN.USERID, CN.SCORE, CN.RVDATE, CN.SHOPNO, CN.SHOP_NAME, MEMBER.USERID, MEMBER.GENDER "
			+ "FROM (SELECT REVIEW.USERID, REVIEW.SHOPNO, REVIEW.SCORE, REVIEW.RVDATE, SHOP.SHOP_NAME, SHOP.SHOP_NO "
			+ "FROM REVIEW, SHOP WHERE REVIEW.SHOPNO = SHOP.SHOP_NO) CN, MEMBER "
			+ "WHERE CN.USERID = MEMBER.USERID) CN2 WHERE CN2.RVDATE >= TO_CHAR(SYSDATE-7,'YYYYMMDD')) CN3 "
			+ "GROUP BY CN3.SHOP_NAME) CN4)CN5 "
			+ "WHERE CN5.ROWN BETWEEN 1 AND 5")
	public List<ReviewVO> avgMaleScoreWeek(HashMap<String, Object> map);
}



	